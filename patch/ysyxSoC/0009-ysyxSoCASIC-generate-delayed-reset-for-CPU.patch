From 1215e4e9c30c7ebbfa5aa79980c7e46858048834 Mon Sep 17 00:00:00 2001
From: Zihao Yu <yuzihao@ict.ac.cn>
Date: Sat, 28 Aug 2021 08:14:19 +0800
Subject: [PATCH 09/74] ysyxSoCASIC: generate delayed reset for CPU

* Some async modules in chiplink will spend certain cycles to finish
  reset. If CPU sends requests too early, chiplink will return a slave
  error. To fix this, we let CPU finish reset after chiplink.
---
 src/SoC.scala | 7 +++++++
 1 file changed, 7 insertions(+)

diff --git a/src/SoC.scala b/src/SoC.scala
index 509cd030..e60a0e98 100644
--- a/src/SoC.scala
+++ b/src/SoC.scala
@@ -53,6 +53,11 @@ class ysyxSoCASIC(implicit p: Parameters) extends LazyModule {
 
   override lazy val module = new Impl
   class Impl extends LazyModuleImp(this) with DontTouch {
+    // generate delayed reset for cpu, since chiplink should finish reset
+    // to initialize some async modules before accept any requests from cpu
+    val cpu_reset = IO(Flipped(chiselTypeOf(reset)))
+    cpu_reset := SynchronizerShiftReg(reset.asBool, 10)
+
     // expose cpu master interface as ports
     val cpu_master  = IO(Flipped(HeterogeneousBag.fromNode(cpuMasterNode.out)))
     (cpuMasterNode.out  zip cpu_master ) foreach { case ((bundle, _), io) => bundle <> io }
@@ -103,8 +108,10 @@ class ysyxSoCFull(implicit p: Parameters) extends LazyModule {
     fpga.master_mmio.map(_ := DontCare)
     fpga.slave.map(_ := DontCare)
 
+    val cpu_reset  = IO(chiselTypeOf(masic.cpu_reset))
     val cpu_master = IO(chiselTypeOf(masic.cpu_master))
     val cpu_slave  = IO(chiselTypeOf(masic.cpu_slave))
+    cpu_reset := masic.cpu_reset
     masic.cpu_master <> cpu_master
     cpu_slave <> masic.cpu_slave
 
-- 
2.34.1

