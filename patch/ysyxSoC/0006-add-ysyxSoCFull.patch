From 34ac5628e0fb22b97a81fbd83653b7d925263c60 Mon Sep 17 00:00:00 2001
From: Zihao Yu <yuzihao@ict.ac.cn>
Date: Thu, 26 Aug 2021 16:46:31 +0800
Subject: [PATCH 06/74] add ysyxSoCFull

---
 src/SoC.scala | 41 +++++++++++++++++++++++++++++++++++++++++
 src/Top.scala |  6 +++---
 2 files changed, 44 insertions(+), 3 deletions(-)

diff --git a/src/SoC.scala b/src/SoC.scala
index 776823ab..ac1cdda8 100644
--- a/src/SoC.scala
+++ b/src/SoC.scala
@@ -8,6 +8,7 @@ import org.chipsalliance.cde.config.Parameters
 import freechips.rocketchip.subsystem._
 import freechips.rocketchip.util._
 import freechips.rocketchip.amba.axi4._
+import freechips.rocketchip.system.SimAXIMem
 
 object AXI4SlavePortParametersGenerator {
   def apply(params: MasterPortParams, base: BigInt, size: BigInt) =
@@ -89,3 +90,43 @@ class ysyxSoCASIC(implicit p: Parameters) extends LazyModule {
     }
   }
 }
+
+class ysyxSoCFPGA(implicit p: Parameters) extends ChipLinkSlave
+
+
+class ysyxSoCFull(implicit p: Parameters) extends LazyModule {
+  val asic = LazyModule(new ysyxSoCASIC)
+
+  override lazy val module = new Impl
+  class Impl extends LazyModuleImp(this) with DontTouch {
+    val masic = asic.module
+    val fpga = LazyModule(new ysyxSoCFPGA)
+    val mfpga = Module(fpga.module)
+
+    masic.fpga_io.b2c <> mfpga.fpga_io.c2b
+    mfpga.fpga_io.b2c <> masic.fpga_io.c2b
+
+    (fpga.master_mem zip fpga.axi4MasterMemNode.in).map { case (io, (_, edge)) =>
+      val mem = LazyModule(new SimAXIMem(edge,
+        base = ChipLinkParam.mem.base, size = ChipLinkParam.mem.mask + 1))
+      Module(mem.module)
+      mem.io_axi4.head <> io
+    }
+
+    fpga.master_mmio.map(_ := DontCare)
+    fpga.slave.map(_ := DontCare)
+
+    val cpu_mem  = IO(chiselTypeOf(asic.module.cpu_mem))
+    val cpu_mmio = IO(chiselTypeOf(asic.module.cpu_mmio))
+    val cpu_dma  = IO(chiselTypeOf(asic.module.cpu_dma))
+//    soc.module.cpu_master <> cpu_master
+    asic.module.cpu_mem <> cpu_mem
+    asic.module.cpu_mmio <> cpu_mmio
+    cpu_dma <> asic.module.cpu_dma
+
+    val spi  = IO(chiselTypeOf(asic.module.spi))
+    val uart = IO(chiselTypeOf(asic.module.uart))
+    spi  <> asic.module.spi
+    uart <> asic.module.uart
+  }
+}
diff --git a/src/Top.scala b/src/Top.scala
index dd3086e0..3fe3c839 100644
--- a/src/Top.scala
+++ b/src/Top.scala
@@ -9,7 +9,7 @@ class ysyxSoCTop extends Module {
   implicit val config: Parameters = new DefaultConfig
 
   val io = IO(new Bundle { })
-  val dut = LazyModule(new ysyxSoCASIC)
+  val dut = LazyModule(new ysyxSoCFull)
   val mdut = Module(dut.module)
   mdut.dontTouchPorts()
   mdut.cpu_mem := DontCare
@@ -17,9 +17,9 @@ class ysyxSoCTop extends Module {
   mdut.cpu_dma := DontCare
   mdut.spi.foreach(_ := DontCare)
   mdut.uart.foreach(_ := DontCare)
-  mdut.fpga_io.b2c := DontCare
 }
 
 object Elaborate extends App {
-  circt.stage.ChiselStage.emitSystemVerilogFile(new ysyxSoCTop, args)
+  val firtoolOptions = Array("--disable-annotation-unknown")
+  circt.stage.ChiselStage.emitSystemVerilogFile(new ysyxSoCTop, args, firtoolOptions)
 }
-- 
2.34.1

