From 4b0f9b6ecf8c50424d55ca95f93f8ff40bd78891 Mon Sep 17 00:00:00 2001
From: Zihao Yu <yuzihao@ict.ac.cn>
Date: Sun, 29 Aug 2021 11:26:12 +0800
Subject: [PATCH 15/74] SoC: refactor addressSet for chiplinkNode

---
 src/SoC.scala                   | 7 +++----
 src/device/ChipLinkBridge.scala | 2 ++
 2 files changed, 5 insertions(+), 4 deletions(-)

diff --git a/src/SoC.scala b/src/SoC.scala
index d9049fa0..bdb465d4 100644
--- a/src/SoC.scala
+++ b/src/SoC.scala
@@ -12,10 +12,10 @@ import freechips.rocketchip.amba.apb._
 import freechips.rocketchip.system.SimAXIMem
 
 object AXI4SlaveNodeGenerator {
-  def apply(params: Option[MasterPortParams], base: BigInt, size: BigInt)(implicit valName: ValName) =
+  def apply(params: Option[MasterPortParams], address: Seq[AddressSet])(implicit valName: ValName) =
     AXI4SlaveNode(params.map(p => AXI4SlavePortParameters(
         slaves = Seq(AXI4SlaveParameters(
-          address       = AddressSet.misaligned(base, size),
+          address       = address,
           executable    = p.executable,
           supportsWrite = TransferSizes(1, p.maxXferBytes),
           supportsRead  = TransferSizes(1, p.maxXferBytes))),
@@ -36,8 +36,7 @@ class ysyxSoCASIC(implicit p: Parameters) extends LazyModule {
         name = "cpu",
         id   = IdRange(0, 1 << idBits))))).toSeq)
 
-  val chiplinkNode = AXI4SlaveNodeGenerator(p(ExtBus),
-      ChipLinkParam.mmio.base, ChipLinkParam.mmio.mask + 1 + ChipLinkParam.mem.mask + 1)
+  val chiplinkNode = AXI4SlaveNodeGenerator(p(ExtBus), ChipLinkParam.allSpace)
 
   val luart = LazyModule(new APBUart16550(AddressSet.misaligned(0x20001000, 0x1000)))
   val lspi  = LazyModule(new APBSPI(AddressSet.misaligned(0x10000000, 0x10001000)))
diff --git a/src/device/ChipLinkBridge.scala b/src/device/ChipLinkBridge.scala
index 14ba074f..5b8e0ce5 100644
--- a/src/device/ChipLinkBridge.scala
+++ b/src/device/ChipLinkBridge.scala
@@ -19,6 +19,8 @@ object ChipLinkParam {
   // Must have a cacheable address sapce.
   val mem  = AddressSet(0xc0000000L, 0x40000000L - 1)
   val mmio = AddressSet(0x40000000L, 0x40000000L - 1)
+
+  val allSpace = Seq(mem, mmio)
 }
 
 
-- 
2.34.1

