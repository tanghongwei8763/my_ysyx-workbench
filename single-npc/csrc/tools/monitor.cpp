#include <getopt.h>
#include <cassert>
#include "../include/commen.h"
#include "../include/monitor.h"
#include "../include/trace.h"
#include "../include/switch.h"
#include "../include/memory.h"

unsigned char npc_logo[] = {
  0x0a, 0x20, 0x5f, 0x5f, 0x5f, 0x5f, 0x5f, 0x5f, 0x5f, 0x5f, 0x20, 0x20,
  0x5f, 0x5f, 0x5f, 0x20, 0x20, 0x5f, 0x5f, 0x5f, 0x5f, 0x5f, 0x5f, 0x5f,
  0x5f, 0x20, 0x20, 0x20, 0x5f, 0x5f, 0x5f, 0x5f, 0x5f, 0x5f, 0x5f, 0x5f,
  0x20, 0x20, 0x5f, 0x5f, 0x5f, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
  0x5f, 0x5f, 0x5f, 0x5f, 0x5f, 0x5f, 0x5f, 0x20, 0x20, 0x20, 0x20, 0x20,
  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
  0x20, 0x5f, 0x5f, 0x5f, 0x5f, 0x5f, 0x5f, 0x5f, 0x5f, 0x20, 0x20, 0x20,
  0x5f, 0x5f, 0x5f, 0x5f, 0x5f, 0x5f, 0x5f, 0x5f, 0x20, 0x20, 0x5f, 0x5f,
  0x5f, 0x5f, 0x5f, 0x5f, 0x5f, 0x5f, 0x20, 0x20, 0x20, 0x20, 0x20, 0x0a,
  0x7c, 0x5c, 0x20, 0x20, 0x20, 0x5f, 0x5f, 0x5f, 0x5f, 0x5c, 0x7c, 0x5c,
  0x20, 0x20, 0x5c, 0x7c, 0x5c, 0x20, 0x20, 0x20, 0x5f, 0x5f, 0x5f, 0x20,
  0x20, 0x5c, 0x7c, 0x5c, 0x20, 0x20, 0x20, 0x5f, 0x5f, 0x5f, 0x5f, 0x5c,
  0x7c, 0x5c, 0x20, 0x20, 0x5c, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7c, 0x5c,
  0x20, 0x20, 0x5f, 0x5f, 0x5f, 0x20, 0x5c, 0x20, 0x20, 0x20, 0x20, 0x20,
  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7c,
  0x5c, 0x20, 0x20, 0x20, 0x5f, 0x5f, 0x5f, 0x20, 0x20, 0x5c, 0x7c, 0x5c,
  0x20, 0x20, 0x20, 0x5f, 0x5f, 0x20, 0x20, 0x5c, 0x7c, 0x5c, 0x20, 0x20,
  0x20, 0x5f, 0x5f, 0x5f, 0x5f, 0x5c, 0x20, 0x20, 0x20, 0x20, 0x0a, 0x5c,
  0x20, 0x5c, 0x20, 0x20, 0x5c, 0x5f, 0x5f, 0x5f, 0x7c, 0x5c, 0x20, 0x5c,
  0x20, 0x20, 0x5c, 0x20, 0x5c, 0x20, 0x20, 0x5c, 0x5c, 0x20, 0x5c, 0x20,
  0x20, 0x5c, 0x20, 0x5c, 0x20, 0x20, 0x5c, 0x5f, 0x5f, 0x5f, 0x7c, 0x5c,
  0x20, 0x5c, 0x20, 0x20, 0x5c, 0x20, 0x20, 0x20, 0x20, 0x5c, 0x20, 0x5c,
  0x20, 0x20, 0x20, 0x5f, 0x5f, 0x2f, 0x7c, 0x20, 0x20, 0x20, 0x5f, 0x5f,
  0x5f, 0x5f, 0x5f, 0x5f, 0x5f, 0x5f, 0x5f, 0x5f, 0x5f, 0x5f, 0x5c, 0x20,
  0x5c, 0x20, 0x20, 0x5c, 0x5c, 0x20, 0x5c, 0x20, 0x20, 0x5c, 0x20, 0x5c,
  0x20, 0x20, 0x5c, 0x7c, 0x5c, 0x20, 0x20, 0x5c, 0x20, 0x5c, 0x20, 0x20,
  0x5c, 0x5f, 0x5f, 0x5f, 0x7c, 0x20, 0x20, 0x20, 0x20, 0x0a, 0x20, 0x5c,
  0x20, 0x5c, 0x5f, 0x5f, 0x5f, 0x5f, 0x5f, 0x20, 0x20, 0x5c, 0x20, 0x5c,
  0x20, 0x20, 0x5c, 0x20, 0x5c, 0x20, 0x20, 0x5c, 0x5c, 0x20, 0x5c, 0x20,
  0x20, 0x5c, 0x20, 0x5c, 0x20, 0x20, 0x5c, 0x20, 0x20, 0x5f, 0x5f, 0x5c,
  0x20, 0x5c, 0x20, 0x20, 0x5c, 0x20, 0x20, 0x20, 0x20, 0x5c, 0x20, 0x5c,
  0x20, 0x20, 0x5c, 0x5f, 0x7c, 0x2f, 0x5f, 0x5f, 0x7c, 0x5c, 0x5f, 0x5f,
  0x5f, 0x5f, 0x5f, 0x5f, 0x5f, 0x5f, 0x5f, 0x5f, 0x5f, 0x5f, 0x5c, 0x20,
  0x5c, 0x20, 0x20, 0x5c, 0x5c, 0x20, 0x5c, 0x20, 0x20, 0x5c, 0x20, 0x5c,
  0x20, 0x20, 0x20, 0x5f, 0x5f, 0x5f, 0x5f, 0x5c, 0x20, 0x5c, 0x20, 0x20,
  0x5c, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x0a, 0x20, 0x20, 0x5c,
  0x7c, 0x5f, 0x5f, 0x5f, 0x5f, 0x7c, 0x5c, 0x20, 0x20, 0x5c, 0x20, 0x5c,
  0x20, 0x20, 0x5c, 0x20, 0x5c, 0x20, 0x20, 0x5c, 0x5c, 0x20, 0x5c, 0x20,
  0x20, 0x5c, 0x20, 0x5c, 0x20, 0x20, 0x5c, 0x7c, 0x5c, 0x20, 0x20, 0x5c,
  0x20, 0x5c, 0x20, 0x20, 0x5c, 0x5f, 0x5f, 0x5f, 0x5f, 0x5c, 0x20, 0x5c,
  0x20, 0x20, 0x5c, 0x5f, 0x7c, 0x5c, 0x20, 0x5c, 0x7c, 0x5f, 0x5f, 0x5f,
  0x5f, 0x5f, 0x5f, 0x5f, 0x5f, 0x5f, 0x5f, 0x5f, 0x5f, 0x7c, 0x5c, 0x20,
  0x5c, 0x20, 0x20, 0x5c, 0x5c, 0x20, 0x5c, 0x20, 0x20, 0x5c, 0x20, 0x5c,
  0x20, 0x20, 0x5c, 0x5f, 0x5f, 0x5f, 0x7c, 0x5c, 0x20, 0x5c, 0x20, 0x20,
  0x5c, 0x5f, 0x5f, 0x5f, 0x5f, 0x20, 0x20, 0x0a, 0x20, 0x20, 0x20, 0x20,
  0x5f, 0x5f, 0x5f, 0x5f, 0x5c, 0x5f, 0x5c, 0x20, 0x20, 0x5c, 0x20, 0x5c,
  0x5f, 0x5f, 0x5c, 0x20, 0x5c, 0x5f, 0x5f, 0x5c, 0x5c, 0x20, 0x5c, 0x5f,
  0x5f, 0x5c, 0x20, 0x5c, 0x5f, 0x5f, 0x5f, 0x5f, 0x5f, 0x5f, 0x5f, 0x5c,
  0x20, 0x5c, 0x5f, 0x5f, 0x5f, 0x5f, 0x5f, 0x5f, 0x5f, 0x5c, 0x20, 0x5c,
  0x5f, 0x5f, 0x5f, 0x5f, 0x5f, 0x5f, 0x5f, 0x5c, 0x20, 0x20, 0x20, 0x20,
  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5c, 0x20,
  0x5c, 0x5f, 0x5f, 0x5c, 0x5c, 0x20, 0x5c, 0x5f, 0x5f, 0x5c, 0x20, 0x5c,
  0x5f, 0x5f, 0x5c, 0x20, 0x20, 0x20, 0x20, 0x5c, 0x20, 0x5c, 0x5f, 0x5f,
  0x5f, 0x5f, 0x5f, 0x5f, 0x5f, 0x5c, 0x0a, 0x20, 0x20, 0x20, 0x7c, 0x5c,
  0x5f, 0x5f, 0x5f, 0x5f, 0x5f, 0x5f, 0x5f, 0x5f, 0x5f, 0x5c, 0x7c, 0x5f,
  0x5f, 0x7c, 0x5c, 0x7c, 0x5f, 0x5f, 0x7c, 0x20, 0x5c, 0x7c, 0x5f, 0x5f,
  0x7c, 0x5c, 0x7c, 0x5f, 0x5f, 0x5f, 0x5f, 0x5f, 0x5f, 0x5f, 0x7c, 0x5c,
  0x7c, 0x5f, 0x5f, 0x5f, 0x5f, 0x5f, 0x5f, 0x5f, 0x7c, 0x5c, 0x7c, 0x5f,
  0x5f, 0x5f, 0x5f, 0x5f, 0x5f, 0x5f, 0x7c, 0x20, 0x20, 0x20, 0x20, 0x20,
  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5c, 0x7c,
  0x5f, 0x5f, 0x7c, 0x20, 0x5c, 0x7c, 0x5f, 0x5f, 0x7c, 0x5c, 0x7c, 0x5f,
  0x5f, 0x7c, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5c, 0x7c, 0x5f, 0x5f, 0x5f,
  0x5f, 0x5f, 0x5f, 0x5f, 0x7c, 0x0a, 0x20, 0x20, 0x20, 0x5c, 0x7c, 0x5f,
  0x5f, 0x5f, 0x5f, 0x5f, 0x5f, 0x5f, 0x5f, 0x5f, 0x7c, 0x20, 0x20, 0x20,
  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
  0x20, 0x20, 0x20, 0x20, 0x0a, '\0'
};

void init_difftest(char *ref_so_file, long img_size, int port);


static void welcome() {
  if(CONFIG_ITRACE) printf("\n\x1B[34mIf trace is enabled, a log file will be generated "
        "to record the trace. This may lead to a large log file. "
        "If it is not necessary, you can disable it in switch.h\n");
  printf("Welcome to \x1B[33m\x1B[41mriscv32e\x1B[0m-NPC!\n");
  printf("For help, type \"help\"\n");
  printf("\33[31m%s\33[0m\n",npc_logo);
}

#define no_argument 0
#define required_argument 1

static char *elf_file = NULL;
static char *log_file = NULL;
static char *diff_so_file = NULL;
static char *img_file = NULL;
static int difftest_port = 1234;

static long load_img() {
  if (img_file == NULL) {
    init_isa();
    return 4096; // built-in image size
  }

  FILE *fp = fopen(img_file, "rb");
  if (fp == NULL) {
    printf("Can not open '%s'\n", img_file);
    exit(EXIT_FAILURE);
    }

  fseek(fp, 0, SEEK_END);
  long size = ftell(fp);

  printf("The image is %s, size = %ld", img_file, size);

  fseek(fp, 0, SEEK_SET);
  int ret = fread(guest_to_host(RESET_VECTOR), size, 1, fp);
  assert(ret == 1);

  fclose(fp);
  return size;
}


static int parse_args(int argc, char *argv[]) {
  const struct option table[] = {
    {"batch"    , no_argument      , NULL, 'b'},
    {"log"      , required_argument, NULL, 'l'},
    {"diff"     , required_argument, NULL, 'd'},
    {"elf"      , required_argument, NULL, 'e'},
    {0          , 0                , NULL,  0 },
  };
  int o;
  while ( (o = getopt_long(argc, argv, "-bl:d:e:", table, NULL)) != -1) {
    switch (o) {
      case 'b': sdb_set_batch_mode(); break;
      case 'l': log_file = optarg; break;
      case 'd': diff_so_file = optarg; break;
      case 'e': elf_file = optarg; break;
      case 1: img_file = optarg; return 0;
      default:
        printf("Usage: %s [OPTION...] IMAGE [args]\n\n", argv[0]);
        printf("\t-b,--batch              run with batch mode\n");
        printf("\t-l,--log=FILE           output log to FILE\n");
        printf("\t-d,--diff=REF_SO        run DiffTest with reference REF_SO\n");
        printf("\t-e,--elf=FILE           elf file to be parsed\n");
        printf("\n");
        exit(0);
    }
  }
  return 0;
}

void init_monitor(int argc, char *argv[]) {

  parse_args(argc, argv);

#ifdef CONFIG_FTRACE
  /* Parse elf file. */
  parse_elf(elf_file);
#endif

  /* Load the image to memory. This will overwrite the built-in image. */
  long img_size = load_img();

  /* Initialize differential testing. */
  init_difftest(diff_so_file, img_size, difftest_port);
  
  /* Initialize the device */
  init_device();

  welcome();
}
